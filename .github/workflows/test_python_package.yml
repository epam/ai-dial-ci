name: Python test build

on:
  workflow_call:
    inputs:
      bypass_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if checks failed
      python_version:
        type: string
        default: '3.11'
        description: Python version to use
      scan_trivy:
        description: 'Scan the image with Trivy'
        required: false
        type: boolean
        default: true
      scan_severity:
        description: 'Severity of vulnerabilities to fail the build'
        required: false
        type: string
        default: 'CRITICAL,HIGH'
      scan_vuln_type:
        description: 'Type of vulnerabilities to scan'
        type: string
        required: false
        default: 'os,library'

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  style_checks:
    runs-on: ubuntu-latest
    steps:
      - name: PR title check
        uses: thehanimo/pr-title-checker@5652588c80c479af803eabfbdb5a3895a77c1388 #v1.4.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: epam/ai-dial-ci/actions/prepare_python@1.0.1
        with:
          python_version: "${{ inputs.python_version }}"
          install_poetry: true
      - name: Lint
        shell: bash
        run: |
          make lint

  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
          python-version: ["3.11", "3.10", "3.9", "3.8"]
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_python@1.0.1
        with:
          python_version: "${{ matrix.python-version }}"
          install_poetry: true
      - name: Test
        continue-on-error: ${{ inputs.bypass_checks }}
        shell: bash
        run: |
          make test PYTHON=${{ matrix.python-version }}

  code_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_python@1.0.1
        with:
          python_version: "${{ inputs.python_version }}"
          install_poetry: true
      - name: Build
        continue-on-error: ${{ inputs.bypass_checks }}
        shell: bash
        run: |
          pip install twine
          make build
          twine check dist/*
      - name: Run Trivy vulnerability scanner
        if: ${{ inputs.scan_trivy }}
        continue-on-error: ${{ inputs.bypass_checks }}
        uses: aquasecurity/trivy-action@f78e9ecf42a1271402d4f484518b9313235990e1 #0.13.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          vuln-type: ${{ inputs.scan_vuln_type }}
          severity: ${{ inputs.scan_severity }}

  ort:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_python@1.0.1
      - name: Install dependencies
        shell: bash
        run: |
          pip install poetry
          make build
      - uses: epam/ai-dial-ci/actions/ort@1.0.1
