name: Python test build

on:
  workflow_call:
    inputs:
      bypass_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if checks failed
      python_version:
        type: string
        default: "3.11"
        description: Python version to use
      scan_trivy:
        description: "Scan the image with Trivy"
        required: false
        type: boolean
        default: true
      scan_severity:
        description: "Severity of vulnerabilities to fail the build"
        required: false
        type: string
        default: "CRITICAL,HIGH"
      scan_vuln_type:
        description: "Type of vulnerabilities to scan"
        type: string
        required: false
        default: "os,library"

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  style_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_python@1.1.0
        with:
          python_version: "${{ inputs.python_version }}"
          install_poetry: true
      - name: Lint
        shell: bash
        run: |
          make lint

  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.10", "3.9", "3.8"]
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_python@1.1.0
        with:
          python_version: "${{ matrix.python-version }}"
          install_poetry: true
      - name: Test
        continue-on-error: ${{ inputs.bypass_checks }}
        shell: bash
        run: |
          make test PYTHON=${{ matrix.python-version }}

  code_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_python@1.1.0
        with:
          python_version: "${{ inputs.python_version }}"
          install_poetry: true
      - name: Build
        continue-on-error: ${{ inputs.bypass_checks }}
        shell: bash
        run: |
          pip install twine
          make build
          twine check dist/*
      - name: Run Trivy vulnerability scanner
        if: ${{ inputs.scan_trivy }}
        continue-on-error: ${{ inputs.bypass_checks }}
        uses: aquasecurity/trivy-action@2b6a709cf9c4025c5438138008beaddbb02086f0 # v0.14.0
        with:
          scan-type: "fs"
          scan-ref: "."
          vuln-type: ${{ inputs.scan_vuln_type }}
          severity: ${{ inputs.scan_severity }}

  ort:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_python@1.1.0
      - name: Install dependencies
        shell: bash
        run: |
          pip install poetry
          make build
      - uses: epam/ai-dial-ci/actions/ort@1.1.0
