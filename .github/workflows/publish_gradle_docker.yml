name: Release version

on:
  workflow_call:
    inputs:
      bypass_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if checks failed
      java_version:
        type: string
        default: "17"
        description: Java version to use
      java_distribution:
        type: string
        default: "temurin"
        description: Java distribution to use

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  style_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/gradle_checkstyle@1.1.0

  code_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/prepare_java@1.1.0
      - name: Test
        continue-on-error: ${{ inputs.bypass_checks }}
        run: |
          ./gradlew check

  calculate_version:
    runs-on: ubuntu-latest
    outputs:
      next_version: ${{ steps.semantic_versioning.outputs.next_version }}
      is_latest: ${{ steps.semantic_versioning.outputs.is_latest }}
      latest_tag: ${{ steps.semantic_versioning.outputs.latest_tag }}
    permissions:
      contents: write
      packages: write
    steps:
      - uses: epam/ai-dial-ci/actions/semantic_versioning@1.1.0
        id: semantic_versioning

  ort:
    runs-on: ubuntu-latest
    steps:
      - uses: epam/ai-dial-ci/actions/ort@1.1.0

  release:
    needs:
      - calculate_version
      - style_checks
      - code_checks
      - ort
    runs-on: ubuntu-latest
    # environment:
    #   name: release
    permissions:
      contents: write
      packages: write

    steps:
      - uses: epam/ai-dial-ci/actions/generate_release_notes@1.1.0
        with:
          latest_tag: ${{ needs.calculate_version.outputs.latest_tag }}
      - uses: epam/ai-dial-ci/actions/prepare_java@1.1.0
      - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4.0.0
        with:
          lfs: true
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}
      - name: Build
        run: |
          sed -i "s/^version = .*/version = \"${{ needs.calculate_version.outputs.next_version }}\"/g" build.gradle
          ./gradlew build -x test
      - uses: epam/ai-dial-ci/actions/build_docker@1.1.0
        with:
          ghcr_username: ${{ github.actor }}
          ghcr_password: ${{ secrets.ACTIONS_BOT_TOKEN }}
          dockerhub_username: ${{ secrets.DOCKERHUB_LOGIN }}
          dockerhub_password: ${{ secrets.DOCKERHUB_TOKEN }}
          image_name: ghcr.io/${{ env.IMAGE_NAME }}
          image_tag: ${{ needs.calculate_version.outputs.next_version }}
          push: true
          scan: true
          image_extra_aliases: |
            ${{ env.IMAGE_NAME }}:${{ needs.calculate_version.outputs.next_version }}
            ${{ github.ref == 'refs/heads/development' && format('{0}:{1}', env.IMAGE_NAME, 'development') || ''}}
            ${{ github.ref == 'refs/heads/development' && format('{0}/{1}:{2}', 'ghcr.io', env.IMAGE_NAME, 'development') || ''}}
            ${{ startsWith(github.ref, 'refs/heads/release-') && needs.calculate_version.outputs.is_latest == 'true' && format('{0}:{1}', env.IMAGE_NAME, 'latest') || ''}}
            ${{ startsWith(github.ref, 'refs/heads/release-') && needs.calculate_version.outputs.is_latest == 'true' && format('{0}/{1}:{2}', 'ghcr.io', env.IMAGE_NAME, 'latest') || ''}}
      - uses: epam/ai-dial-ci/actions/publish_tag_release@1.1.0
        with:
          tag_version: ${{ needs.calculate_version.outputs.next_version }}
          changelog_file: "/tmp/my_changelog" # comes from generate_release_notes step; TODO: beautify
          extra_commit_command: |
            git add build.gradle
            git commit -m '[skip ci] Update version' || true # upstream branch may already be updated
