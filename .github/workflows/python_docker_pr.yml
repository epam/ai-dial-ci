name: Python Docker PR workflow

on:
  workflow_call:
    inputs:
      bypass_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if checks failed
      enable_style_checks:
        type: boolean
        default: true
        description: Enable style_checks
      bypass_style_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if style_checks failed
      enable_code_checks:
        type: boolean
        default: true
        description: Enable code_checks
      bypass_code_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if code_checks failed
      enable_ort:
        type: boolean
        default: true
        description: Enable ORT scanning
      bypass_ort:
        type: boolean
        default: false
        description: Do not fail pipeline if ORT scan failed
      ort_version:
        type: string
        default: "latest"
        description: ORT version to use
      enable_trivy:
        type: boolean
        default: true
        description: Enable Trivy scanning
      bypass_trivy:
        type: boolean
        default: false
        description: Do not fail pipeline if Trivy failed
      severity_trivy:
        type: string
        default: "CRITICAL,HIGH"
        description: Severities of vulnerabilities to fail the build
      severity_for_sarif_trivy:
        type: string
        default: "CRITICAL,HIGH"
        description: "Severities of vulnerabilities in SARIF report"
      limit_severities_for_sarif_trivy:
        type: boolean
        default: true
        description: Limit severities for SARIF format
      python_version:
        type: string
        default: "3.11"
        description: Python version to use
      poetry_version:
        type: string
        description: "Poetry version to use"
        default: "1.8.5"
      maximize-build-space:
        type: boolean
        default: false
        description: Maximize build space by removing unwanted software

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    uses: ./.github/workflows/python_docker_test.yml
    with:
      bypass_checks: ${{ inputs.bypass_checks }}
      enable_style_checks: ${{ inputs.enable_style_checks }}
      bypass_style_checks: ${{ inputs.bypass_style_checks }}
      enable_code_checks: ${{ inputs.enable_code_checks }}
      bypass_code_checks: ${{ inputs.bypass_code_checks }}
      enable_ort: ${{ inputs.enable_ort }}
      bypass_ort: ${{ inputs.bypass_ort }}
      ort_version: ${{ inputs.ort_version }}
      python_version: ${{ inputs.python_version }}
      poetry_version: ${{ inputs.poetry_version }}

  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@90e01b21170618765a73370fcc3abbd1684a7793 # v5
        if: ${{ inputs.maximize-build-space }}
        with:
          remove-android: "true"
          remove-dotnet: "true"
          remove-haskell: "true"
          remove-large-packages: "true"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
      - uses: epam/ai-dial-ci/actions/build_docker@1.13.0
        with:
          image_name: ghcr.io/${{ env.IMAGE_NAME }}
          image_tag: test
          scan: ${{ inputs.enable_trivy }}
          bypass_checks: ${{ inputs.bypass_trivy }}
          scan_severity: ${{ inputs.severity_trivy }}
          scan_severity_for_sarif: ${{ inputs.severity_for_sarif_trivy }}
          scan_limit_severities_for_sarif: ${{ inputs.limit_severities_for_sarif_trivy }}
