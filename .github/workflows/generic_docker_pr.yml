name: Generic Docker PR workflow

on:
  workflow_call:
    inputs:
      bypass-checks:
        type: boolean
        default: false
        description: Do not fail pipeline if checks failed
      style-checks-enabled:
        type: boolean
        default: true
        description: Enable style_checks
      style-checks-bypassed:
        type: boolean
        default: false
        description: Do not fail pipeline if style_checks failed
      ort-enabled:
        type: boolean
        default: true
        description: Enable ORT scanning
      ort-bypassed:
        type: boolean
        default: false
        description: Do not fail pipeline if ORT scan failed
      ort-version:
        type: string
        default: "latest"
        description: ORT version to use
      trivy-enabled:
        type: boolean
        default: true
        description: Enable Trivy scanning
      trivy-bypassed:
        type: boolean
        default: false
        description: Do not fail pipeline if Trivy failed
      trivy-severity:
        type: string
        default: "CRITICAL,HIGH"
        description: Severities of vulnerabilities to fail the build
      trivy-severity-for-sarif:
        type: string
        default: "CRITICAL,HIGH"
        description: "Severities of vulnerabilities in SARIF report"
      trivy-limit-severities-for-sarif:
        type: boolean
        default: true
        description: Limit severities for SARIF format
      maximize-build-space:
        type: boolean
        default: false
        description: Maximize build space by removing unwanted software

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    uses: ./.github/workflows/generic_docker_test.yml
    with:
      bypass-checks: ${{ inputs.bypass-checks }}
      style-checks-enabled: ${{ inputs.style-checks-enabled }}
      style-checks-bypassed: ${{ inputs.style-checks-bypassed }}
      ort-enabled: ${{ inputs.ort-enabled }}
      ort-bypassed: ${{ inputs.ort-bypassed }}
      ort-version: ${{ inputs.ort-version }}

  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@90e01b21170618765a73370fcc3abbd1684a7793 # v5
        if: ${{ inputs.maximize-build-space }}
        with:
          remove-android: "true"
          remove-dotnet: "true"
          remove-haskell: "true"
          remove-large-packages: "true"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
      - uses: epam/ai-dial-ci/actions/build_docker@2.0.1
        with:
          image-name: ghcr.io/${{ env.IMAGE_NAME }}
          image-tag: test
          trivy-enabled: ${{ inputs.trivy-enabled }}
          bypass-checks: ${{ inputs.trivy-bypassed }}
          trivy-severity: ${{ inputs.trivy-severity }}
          trivy-severity-for-sarif: ${{ inputs.trivy-severity-for-sarif }}
          trivy-limit-severities-for-sarif: ${{ inputs.trivy-limit-severities-for-sarif }}
