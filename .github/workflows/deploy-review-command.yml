name: deploy-review-command
on:
  repository_dispatch:
    types: [deploy-review-command]
jobs:
  deploy-review:
    runs-on: ubuntu-latest
    steps:
      - name: Check repository owner
        id: owner
        run: |
          DISPATCHED_REPO_NAME=${{ github.event.client_payload.github.payload.repository.name }}
          DISPATCHED_REPO_OWNER=${{ github.event.client_payload.github.payload.repository.owner.login }}
          ERROR_MESSAGE=""
          if [[ "$DISPATCHED_REPO_OWNER" != "$GITHUB_REPOSITORY_OWNER" ]]; then
          ERROR_MESSAGE="The event was not dispatched by a repository within the same owner."
          fi
          if [[ "$DISPATCHED_REPO_NAME" != ai-dial* ]]; then
          ERROR_MESSAGE+=" The repository name does not start with 'ai-dial'."
          fi
          if [[ -n "$ERROR_MESSAGE" ]]; then
            echo "status=$ERROR_MESSAGE" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "All checks passed."
      - name: Checks and transformations
        id: vars
        run: |
          ERROR_MESSAGE=""
          if [[ -z "${{ github.event.client_payload.slash_command.args.named.application }}" ]]; then
            ERROR_MESSAGE="The 'application' argument is missing."
          fi
          if [[ -z "${{ github.event.client_payload.pull_request.number }}" ]]; then
            ERROR_MESSAGE+=" Pull request number is missing."
          fi
          if [[ -z "${{ github.event.client_payload.pull_request.head.repo.full_name }}" ]]; then
            ERROR_MESSAGE+=" Pull request head repo full name is missing."
          fi
          if [[ -z "${{ github.event.client_payload.pull_request.head.ref }}" ]]; then
            ERROR_MESSAGE+=" Pull request head ref is missing."
          fi
          if [[ -n "$ERROR_MESSAGE" ]]; then
            echo "status=$ERROR_MESSAGE" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "All required values are present."

      - name: Deploy environment
        id: deploy
        uses: digital-blueprint/gitlab-pipeline-trigger-action@388706535758e3417c5aca927a0958ee67c9f257 # v1.0.6
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          trigger_token: ${{ secrets.DEPLOY_TRIGGER_TOKEN }}
          access_token: ${{ secrets.DEPLOY_ACCESS_TOKEN }}
          id: ${{ secrets.DEPLOY_PROJECT_ID }}
          ref: ${{ secrets.DEPLOY_REF }}
          variables: >
            {
              "GITHUB_APP":"${{ github.event.client_payload.slash_command.args.named.application }}",
              "GITHUB_PR":"pr-${{ github.event.client_payload.pull_request.number }}",
              "GITHUB_REPO":"${{ github.event.client_payload.pull_request.head.repo.full_name }}",
              "GITHUB_REF":"${{ github.event.client_payload.pull_request.head.ref }}",
              "GITHUB_TRIGGER": "${{ github.event.client_payload.github.payload.comment.html_url }}"
            }

      - name: Return status
        if: success() || failure()
        uses: peter-evans/create-or-update-comment@23ff15729ef2fc348714a3bb66d2f655ca9066f2 # v3.1.0
        with:
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          body: |
            >Deployment status: ${{ steps.owner.outputs.status || steps.vars.outputs.status || steps.deploy.outputs.status || 'something went wrong' }}
