name: Python Package Release workflow

on:
  workflow_call:
    inputs:
      bypass_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if checks failed
      enable_style_checks:
        type: boolean
        default: true
        description: Enable style_checks
      bypass_style_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if style_checks failed
      enable_code_checks:
        type: boolean
        default: true
        description: Enable code_checks
      bypass_code_checks:
        type: boolean
        default: false
        description: Do not fail pipeline if code_checks failed
      enable_ort:
        type: boolean
        default: true
        description: Enable ORT scanning
      bypass_ort:
        type: boolean
        default: false
        description: Do not fail pipeline if ORT scan failed
      ort_version:
        type: string
        default: "latest"
        description: ORT version to use
      enable_trivy:
        type: boolean
        default: true
        description: Enable Trivy scanning
      bypass_trivy:
        type: boolean
        default: false
        description: Do not fail pipeline if Trivy failed
      severity_trivy:
        type: string
        default: "CRITICAL,HIGH"
        description: Severities of vulnerabilities to fail the build
      severity_for_sarif_trivy:
        type: string
        default: "CRITICAL,HIGH"
        description: "Severities of vulnerabilities in SARIF report"
      limit_severities_for_sarif_trivy:
        type: boolean
        default: true
        description: Limit severities for SARIF format
      python_version:
        type: string
        default: "3.11"
        description: Python version to use
      poetry_version:
        type: string
        description: "Poetry version to use"
        default: "1.8.5"
      test_python_versions:
        type: string
        description: Python versions to run tests against
        default: '["3.8", "3.9", "3.10", "3.11"]'

jobs:
  test:
    uses: ./.github/workflows/python_package_test.yml
    with:
      bypass_checks: ${{ inputs.bypass_checks }}
      enable_style_checks: ${{ inputs.enable_style_checks }}
      bypass_style_checks: ${{ inputs.bypass_style_checks }}
      enable_code_checks: ${{ inputs.enable_code_checks }}
      bypass_code_checks: ${{ inputs.bypass_code_checks }}
      enable_ort: ${{ inputs.enable_ort }}
      bypass_ort: ${{ inputs.bypass_ort }}
      ort_version: ${{ inputs.ort_version }}
      enable_trivy: ${{ inputs.enable_trivy }}
      bypass_trivy: ${{ inputs.bypass_trivy }}
      scan_severity: ${{ inputs.severity_trivy }}
      scan_severity_for_sarif: ${{ inputs.severity_for_sarif_trivy }}
      scan_limit_severities_for_sarif: ${{ inputs.limit_severities_for_sarif_trivy }}
      python_version: ${{ inputs.python_version }}
      test_python_versions: ${{ inputs.test_python_versions }}

  calculate_version:
    runs-on: ubuntu-latest
    outputs:
      non_semver_next_version: ${{ steps.semantic_versioning.outputs.non_semver_next_version }}
      latest_tag: ${{ steps.semantic_versioning.outputs.latest_tag }}
    steps:
      - uses: epam/ai-dial-ci/actions/semantic_versioning@1.13.0
        id: semantic_versioning

  release:
    runs-on: ubuntu-22.04 # TODO: ubuntu-latest have python 3.12 by default and breaks `pip install` system-wide packages
    permissions:
      contents: write
      packages: write
      security-events: write
    needs:
      - calculate_version
      - test
    steps:
      - uses: epam/ai-dial-ci/actions/generate_release_notes@1.13.0
        with:
          latest_tag: ${{ needs.calculate_version.outputs.latest_tag }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
          token: ${{ secrets.ACTIONS_BOT_TOKEN }}
      - uses: epam/ai-dial-ci/actions/python_prepare@1.13.0
        with:
          python_version: ${{ inputs.python_version }}
          poetry_version: ${{ inputs.poetry_version }}
      - name: Set version
        shell: bash
        run: |
          sed -i "s/^version = .*/version = \"${{ needs.calculate_version.outputs.non_semver_next_version }}\"/g" pyproject.toml
      - name: Publish to pypi
        shell: bash
        run: |
          make build
          make publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      - uses: epam/ai-dial-ci/actions/publish_tag_release@1.13.0
        with:
          tag_version: ${{ needs.calculate_version.outputs.non_semver_next_version }}
          changelog_file: "/tmp/my_changelog" # comes from generate_release_notes step; TODO: beautify
          artifacts: "dist/*"
          extra_commit_command: |
            git add pyproject.toml
            git commit -m '[skip ci] Update version' || true # upstream branch may already be updated
